{"version":3,"sources":["components/Introduction/Introduction.js","components/CodeExample/CodeExample.js","components/NavBar/NavBar.js","examples/ExampleMoleculeStructure.js","utils/initRDKit.js","components/MoleculeStructure/MoleculeStructure.js","examples/ExampleSubstructure.js","examples/ExampleMultiSubstructure.js","utils/smiles.js","examples/ExampleSubstructureSearch.js","examples/ExampleSvg.js","examples/ExampleCanvas.js","examples/ExampleDrawingOptions.js","examples/ExampleList.js","index.js","webpack:///./src/examples/ExampleList.js?699a","webpack:///./src/components/MoleculeStructure/MoleculeStructure.js?34a0","webpack:///./src/examples/ExampleSvg.js?e959","webpack:///./src/examples/ExampleCanvas.js?b4aa","webpack:///./src/examples/ExampleSubstructure.js?a3ad","webpack:///./src/examples/ExampleMultiSubstructure.js?8628","webpack:///./src/examples/ExampleDrawingOptions.js?1990","webpack:///./src/examples/ExampleSubstructureSearch.js?2ee7"],"names":["Introduction","id","className","Component","CodeExample","code","children","trigger","language","style","a11yDark","NavBar","state","burgerActive","brugerActiveClass","this","padding","role","aria-label","href","alt","src","process","aria-expanded","data-target","onClick","setState","aria-hidden","data-tooltip","ExampleMoleculeStructure","initRDKit","rdkitLoadingPromise","Promise","resolve","reject","window","initRDKitModule","then","RDKit","catch","e","MoleculeStructure","props","MOL_DETAILS","width","height","bondLineWidth","addStereoAnnotation","extraDetails","svg","undefined","rdKitLoaded","rdKitError","drawingDelay","setTimeout","drawSVGorCanvas","mol","get_mol","structure","qmol","get_qmol","subStructure","svgMode","isValidMol","get_svg_with_highlights","getMolDetails","canvas","document","getElementById","draw_to_canvas_with_highlights","delete","is_valid","subStructHighlightDetails","JSON","parse","get_substruct_matches","subStructHighlightDetailsMerged","_","isEmpty","reduce","acc","atoms","bonds","stringify","draw","prevProps","isEqual","title","dangerouslySetInnerHTML","__html","defaultProps","ExampleSubstructure","ExampleMultiSubstructure","SMILES_LIST","ExampleList","matches","searchValue","handleSearchChange","debounce","currentVal","target","value","filter","smiles","hasMatch","get_substruct_match","length","smilesList","slice","margin","type","onChange","placeholder","map","React","ExampleSVG","ExampleCanvas","ExampleDrawingOptions","addAtomIndices","highlightColor","legend","overflowX","ReactDOM","render","component","elementId","ExampleSubstructureSearch","forEach","example"],"mappings":"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","file":"static/js/main.6af1d3ee.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Introduction extends Component {\n  render() {\n    return (\n      <div id=\"component-introduction\" className=\"container\">\n        <section className=\"hero\">\n          <div className=\"hero-body\">\n            <p className=\"title\">Introduction</p>\n            <p className=\"subtitle\">Welcome to RDKit.js for React.</p>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n","import SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { a11yDark } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport ReactCollapsible from \"react-collapsible\";\n\nfunction CodeExample({ code, children }) {\n  return (\n    <>\n      {children}\n      <div className=\"container\">\n        <ReactCollapsible\n          trigger={\n            <button className=\"button is-primary is-light is-large is-fullwidth\">\n              See Code Example\n            </button>\n          }\n        >\n          <div className=\"container\">\n            <SyntaxHighlighter language=\"javascript\" style={a11yDark}>\n              {code}\n            </SyntaxHighlighter>\n          </div>\n        </ReactCollapsible>\n      </div>\n    </>\n  );\n}\n\nexport default CodeExample;\n","import React, { Component } from \"react\";\n\nexport default class NavBar extends Component {\n  state = {\n    burgerActive: false,\n  };\n  render() {\n    const brugerActiveClass = this.state.burgerActive ? \" is-active\" : \"\";\n    return (\n      <>\n        <nav\n          className=\"navbar has-shadow\"\n          style={{ padding: \"12px 0\" }}\n          role=\"navigation\"\n          aria-label=\"main navigation\"\n        >\n          <div className=\"navbar-brand\" style={{ padding: \"6px\" }}>\n            <a className=\"navbar-item\" href=\"#/\">\n              <img\n                alt=\"logo\"\n                src={`${process.env.PUBLIC_URL}/rdkitjs_cropped_200.png`}\n              />\n            </a>\n\n            <a\n              role=\"button\"\n              className={`navbar-burger${brugerActiveClass}`}\n              aria-label=\"menu\"\n              aria-expanded=\"false\"\n              data-target=\"navbarBasicExample\"\n              href=\"#/\"\n              onClick={() => {\n                this.setState({ burgerActive: !this.state.burgerActive });\n              }}\n            >\n              <span aria-hidden=\"true\"></span>\n              <span aria-hidden=\"true\"></span>\n              <span aria-hidden=\"true\"></span>\n            </a>\n          </div>\n\n          <div\n            id=\"navbarBasicExample\"\n            className={`navbar-menu${brugerActiveClass}`}\n          >\n            <div className=\"navbar-start\">\n              <a className=\"navbar-item\" href=\"https://github.com/rdkit/rdkit\">\n                {\" \"}\n                RDKit Home{\" \"}\n              </a>\n            </div>\n\n            <div className=\"navbar-end\">\n              <div className=\"navbar-item\">\n                <div className=\"buttons\">\n                  <a\n                    data-tooltip=\"View Source Code\"\n                    className=\"button has-tooltip-bottom is-white is-big\"\n                    href=\"https://github.com/MichelML/rdkit-js\"\n                  >\n                    <span className=\"icon\">\n                      <i className=\"fab fa-github fa-2x\"></i>\n                    </span>\n                  </a>\n                </div>\n              </div>\n              <div className=\"navbar-item\">\n                <div className=\"buttons\">\n                  <a\n                    data-tooltip=\"Go to NPM package\"\n                    className=\"button has-tooltip-bottom is-white is-big\"\n                    href=\"https://www.npmjs.com/package/@rdkit/rdkit\"\n                  >\n                    <span className=\"icon\">\n                      <i className=\"fab fa-npm fa-2x\"></i>\n                    </span>\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </nav>\n      </>\n    );\n  }\n}\n","function ExampleMoleculeStructure() {\n  return (\n    <div id=\"component-example-moleculestructure\" className=\"container\">\n      <section className=\"hero\">\n        <div className=\"hero-body\">\n          <p className=\"title\">MoleculeStructure</p>\n          <p className=\"subtitle\">\n            The examples below will mostly use the React component{\" \"}\n            <code className=\"is-family-code\">MoleculeStructure</code> to render\n            the examples. You can see the React implementation in the code\n            below.\n          </p>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default ExampleMoleculeStructure;\n","const initRDKit = (() => {\n  let rdkitLoadingPromise;\n\n  return () => {\n    if (!rdkitLoadingPromise) {\n      rdkitLoadingPromise = new Promise((resolve, reject) => {\n        window\n          .initRDKitModule()\n          .then((RDKit) => {\n            window.RDKit = RDKit;\n            resolve();\n          })\n          .catch((e) => {\n            reject();\n          });\n      });\n    }\n\n    return rdkitLoadingPromise;\n  };\n})();\n\nexport default initRDKit;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nimport \"./MoleculeStructure.css\";\nimport initRDKit from \"../../utils/initRDKit\";\n\nclass MoleculeStructure extends Component {\n  static propTypes = {\n    /**\n     * Generic properties\n     */\n    id: PropTypes.string.isRequired,\n    className: PropTypes.string,\n    svgMode: PropTypes.bool,\n    width: PropTypes.number,\n    height: PropTypes.number,\n    /**\n     * RDKit-specific properties\n     */\n    structure: PropTypes.string.isRequired,\n    subStructure: PropTypes.string,\n    extraDetails: PropTypes.object,\n    drawingDelay: PropTypes.number,\n  };\n\n  static defaultProps = {\n    subStructure: \"\",\n    className: \"\",\n    width: 250,\n    height: 200,\n    svgMode: false,\n    extraDetails: {},\n    drawingDelay: undefined,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.MOL_DETAILS = {\n      width: this.props.width,\n      height: this.props.height,\n      bondLineWidth: 1,\n      addStereoAnnotation: true,\n      ...this.props.extraDetails,\n    };\n\n    this.state = {\n      svg: undefined,\n      rdKitLoaded: false,\n      rdKitError: false,\n    };\n  }\n\n  draw() {\n    if (this.props.drawingDelay) {\n      setTimeout(() => {\n        this.drawSVGorCanvas();\n      }, this.props.drawingDelay);\n    } else {\n      this.drawSVGorCanvas();\n    }\n  }\n\n  drawSVGorCanvas() {\n    const mol = window.RDKit.get_mol(this.props.structure || \"invalid\");\n    const qmol = window.RDKit.get_qmol(this.props.subStructure || \"invalid\");\n\n    if (this.props.svgMode && this.isValidMol(mol)) {\n      const svg = mol.get_svg_with_highlights(this.getMolDetails(mol, qmol));\n      this.setState({ svg });\n    } else if (this.isValidMol(mol)) {\n      const canvas = document.getElementById(this.props.id);\n      mol.draw_to_canvas_with_highlights(canvas, this.getMolDetails(mol, qmol));\n    }\n\n    /**\n     * Delete C++ mol objects manually\n     * https://emscripten.org/docs/porting/connecting_cpp_and_javascript/embind.html#memory-management\n     */\n    mol.delete();\n    qmol.delete();\n  }\n\n  isValidMol(mol) {\n    return !!mol && mol.is_valid();\n  }\n\n  getMolDetails(mol, qmol) {\n    if (this.isValidMol(mol) && this.isValidMol(qmol)) {\n      const subStructHighlightDetails = JSON.parse(\n        mol.get_substruct_matches(qmol)\n      );\n      const subStructHighlightDetailsMerged = !_.isEmpty(\n        subStructHighlightDetails\n      )\n        ? subStructHighlightDetails.reduce(\n            (acc, { atoms, bonds }) => ({\n              atoms: [...acc.atoms, ...atoms],\n              bonds: [...acc.bonds, ...bonds],\n            }),\n            { bonds: [], atoms: [] }\n          )\n        : subStructHighlightDetails;\n      return JSON.stringify({\n        ...this.MOL_DETAILS,\n        ...(this.props.extraDetails || {}),\n        ...subStructHighlightDetailsMerged,\n      });\n    } else {\n      return JSON.stringify({\n        ...this.MOL_DETAILS,\n        ...(this.props.extraDetails || {}),\n      });\n    }\n  }\n\n  componentDidMount() {\n    initRDKit()\n      .then(() => {\n        this.setState({ rdKitLoaded: true });\n        this.draw();\n      })\n      .catch(() => {\n        this.setState({ rdKitError: true });\n      });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.state.rdKitLoaded) {\n      const shouldUpdateDrawing =\n        prevProps.structure !== this.props.structure ||\n        prevProps.subStructure !== this.props.subStructure ||\n        !_.isEqual(prevProps.extraDetails, this.props.extraDetails);\n\n      if (shouldUpdateDrawing) {\n        this.draw();\n      }\n    }\n  }\n\n  render() {\n    if (this.state.rdKitError) {\n      return \"Error loading renderer.\";\n    }\n    if (!this.state.rdKitLoaded) {\n      return \"Loading renderer...\";\n    }\n\n    const mol = window.RDKit.get_mol(this.props.structure || \"invalid\");\n    const isValidMol = this.isValidMol(mol);\n    mol.delete();\n\n    if (!isValidMol) {\n      return (\n        <span title={`Cannot render structure: ${this.props.structure}`}>\n          Render Error.\n        </span>\n      );\n    } else if (this.props.svgMode) {\n      return (\n        <div\n          title={this.props.structure}\n          className={\"molecule-structure-svg \" + (this.props.className || \"\")}\n          style={{ width: this.props.width, height: this.props.height }}\n          dangerouslySetInnerHTML={{ __html: this.state.svg }}\n        ></div>\n      );\n    } else {\n      return (\n        <div\n          className={\n            \"molecule-canvas-container \" + (this.props.className || \"\")\n          }\n        >\n          <canvas\n            title={this.props.structure}\n            id={this.props.id}\n            width={this.props.width}\n            height={this.props.height}\n          ></canvas>\n        </div>\n      );\n    }\n  }\n}\n\nexport default MoleculeStructure;\n","import MoleculeStructure from \"../components/MoleculeStructure/MoleculeStructure\";\n\nfunction ExampleSubstructure() {\n  const caffeine = \"CN1C=NC2=C1C(=O)N(C(=O)N2C)\";\n  const caffeineSubStruct = \"[N,n,O;!H0]\";\n\n  const aspirin = \"CC(=O)Oc1ccccc1C(=O)O\";\n  const aspirinSubStruct = \"CC(=O)Oc1ccccc1C\";\n\n  return (\n    <div id=\"component-example-substruct\" className=\"container\">\n      <section className=\"hero\">\n        <div className=\"hero-body\">\n          <p className=\"title\">Substructure Highlight</p>\n          <p className=\"subtitle\">\n            You can also highlight substructure of molecules with both the SVG\n            and Canvas APIs.\n          </p>\n        </div>\n      </section>\n      <div className=\"columns is-desktop\">\n        <div className=\"column\">\n          <MoleculeStructure\n            id=\"structure-example-substruct-svg-caffeine\"\n            structure={caffeine}\n            subStructure={caffeineSubStruct}\n            width={350}\n            height={300}\n            svgMode\n          />\n        </div>\n        <div className=\"column\">\n          <MoleculeStructure\n            id=\"structure-example-subsctruct-canvas-aspirin\"\n            structure={aspirin}\n            subStructure={aspirinSubStruct}\n            width={350}\n            height={300}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ExampleSubstructure;\n","import MoleculeStructure from \"../components/MoleculeStructure/MoleculeStructure\";\n\nfunction ExampleMultiSubstructure() {\n  const caffeine = \"CN1C=NC2=C1C(=O)N(C(=O)N2C)\";\n  const caffeineSubStruct = \"[N,n,o,O]\";\n\n  const aspirin = \"CC(=O)Oc1ccccc1C(=O)O\";\n  const aspirinSubStruct = \"[O,o].c1ccccc1\";\n\n  return (\n    <div id=\"component-example-multi-substruct\" className=\"container\">\n      <section className=\"hero\">\n        <div className=\"hero-body\">\n          <p className=\"title\">Multi-substructure Highlight</p>\n          <p className=\"subtitle\">\n            You can also highlight multiple substructures of molecules with\n            SMILES, SMARTS and a combination of the two with dot notation.\n          </p>\n        </div>\n      </section>\n      <div className=\"columns is-desktop\">\n        <div className=\"column\">\n          <MoleculeStructure\n            id=\"structure-example-multisubstruct-svg-caffeine\"\n            structure={caffeine}\n            subStructure={caffeineSubStruct}\n            width={350}\n            height={300}\n            svgMode\n          />\n        </div>\n        <div className=\"column\">\n          <MoleculeStructure\n            id=\"structure-example-multisubsctruct-canvas-aspirin\"\n            structure={aspirin}\n            subStructure={aspirinSubStruct}\n            width={350}\n            height={300}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ExampleMultiSubstructure;\n","/**\n * Taken from https://github.com/reymond-group/smilesDrawer/blob/master/example/drugbank.js\n */\n\nexport const SMILES_LIST = [\n  \"CC[C@H](C)[C@H](NC(=O)[C@H](CCC(O)=O)NC(=O)[C@H](CCC(O)=O)NC(=O)[C@H](CC1=CC=CC=C1)NC(=O)[C@H](CC(O)=O)NC(=O)CNC(=O)[C@H](CC(N)=O)NC(=O)CNC(=O)CNC(=O)CNC(=O)CNC(=O)[C@@H]1CCCN1C(=O)[C@H](CCCNC(N)=N)NC(=O)[C@@H]1CCCN1C(=O)[C@H](N)CC1=CC=CC=C1)C(=O)N1CCC[C@H]1C(=O)N[C@@H](CCC(O)=O)C(=O)N[C@@H](CCC(O)=O)C(=O)N[C@@H](CC1=CC=C(O)C=C1)C(=O)N[C@@H](CC(C)C)C(O)=O\",\n  \"CC(C)C[C@H](NC(=O)[C@@H](COC(C)(C)C)NC(=O)[C@H](CC1=CC=C(O)C=C1)NC(=O)[C@H](CO)NC(=O)[C@H](CC1=CNC2=CC=CC=C12)NC(=O)[C@H](CC1=CN=CN1)NC(=O)[C@@H]1CCC(=O)N1)C(=O)N[C@@H](CCCN=C(N)N)C(=O)N1CCC[C@H]1C(=O)NNC(N)=O\",\n  \"NC(=O)CC[C@@H]1NC(=O)[C@H](CC2=CC=CC=C2)NC(=O)[C@H](CC2=CC=C(O)C=C2)NC(=O)CCSSC[C@H](NC(=O)[C@H](CC(N)=O)NC1=O)C(=O)N1CCC[C@H]1C(=O)N[C@@H](CCCNC(N)=N)C(=O)NCC(N)=O\",\n  \"CC(C)C[C@H](NC(=O)[C@@H](CCCNC(N)=O)NC(=O)[C@H](CC1=CC=C(O)C=C1)NC(=O)[C@H](CO)NC(=O)[C@@H](CC1=CN=CC=C1)NC(=O)[C@@H](CC1=CC=C(Cl)C=C1)NC(=O)[C@@H](CC1=CC2=CC=CC=C2C=C1)NC(C)=O)C(=O)N[C@@H](CCCNC(N)=N)C(=O)N1CCC[C@H]1C(=O)N[C@H](C)C(N)=O\",\n  \"CC[C@@H]1NC(=O)[C@H]([C@H](O)[C@H](C)CC=CC)N(C)C(=O)[C@H](C(C)C)N(C)C(=O)[C@H](CC(C)C)N(C)C(=O)[C@H](CC(C)C)N(C)C(=O)[C@@H](C)NC(=O)[C@H](C)NC(=O)[C@H](CC(C)C)N(C)C(=O)[C@@H](NC(=O)[C@H](CC(C)C)N(C)C(=O)CN(C)C1=O)C(C)C\",\n  \"NCCCC[C@H](NC(=O)[C@@H]1CCCN1C(=O)[C@@H]1CSSC[C@H](N)C(=O)N[C@@H](CC2=CC=CC=C2)C(=O)N[C@@H](CC2=CC=CC=C2)C(=O)N[C@@H](CCC(N)=O)C(=O)N[C@@H](CC(N)=O)C(=O)N1)C(=O)NCC(N)=O\",\n  \"[H][C@]1(NC(=O)[C@H](CCCCN)NC(=O)[C@@H](CC2=CNC3=C2C=CC=C3)NC(=O)[C@H](CC2=CC=CC=C2)NC(=O)[C@H](CSSC[C@H](NC1=O)C(=O)N[C@H](CO)[C@@H](C)O)NC(=O)[C@H](N)CC1=CC=CC=C1)[C@@H](C)O\",\n  \"CC1=NC=C(COP(O)(O)=O)C(C=O)=C1O\",\n  \"OC[C@H]1O[C@@H]([C@H](O)[C@@H]1OP(O)(=O)O[C@]([H])(C)CNC(=O)CC[C@]1(C)[C@@H](CC(=O)N)[C@@]2([H])N([Co]C#N)C1=C(C)/C1=N/C(=CC3=NC(=C(C)/C4=N[C@]2(C)[C@@](C)(CC(=O)N)[C@@H]4CCC(=O)N)[C@@](C)(CC(=O)N)[C@@H]3CCC(=O)N)/C(C)(C)[C@@H]1CCC(=O)N)N1C=NC2=CC(C)=C(C)C=C12\",\n  \"NC1=NC(=O)C2=C(NCC(CNC3=CC=C(C=C3)C(=O)N[C@@H](CCC(O)=O)C(O)=O)N2)N1\",\n  \"N[C@@H](CC1=CN=CN1)C(O)=O\",\n  \"C[S+](CC[C@H](N)C(O)=O)C[C@H]1O[C@H]([C@H](O)[C@@H]1O)N1C=NC2=C(N)N=CN=C12\",\n  \"CC(=O)C(O)=O\",\n  \"N[C@@H](CC1=CC=CC=C1)C(O)=O\",\n  \"[H][C@]12CS[C@@H](CCCCC(O)=O)[C@@]1([H])NC(=O)N2\",\n  \"C[N+](C)(C)CCO\",\n  \"NCCCC[C@H](N)C(O)=O\",\n  \"N[C@@H](CCCNC(N)=N)C(O)=O\",\n  \"[H][C@@]1(OC(=O)C(O)=C1O)[C@@H](O)CO\",\n  \"NCCCNCCCCNCCCN\",\n  \"N[C@@H](CC(O)=O)C(O)=O\",\n  \"NCCC[C@H](N)C(O)=O\",\n  \"N[C@@H](CCC(N)=O)C(O)=O\",\n  \"NC1=C2N=CN([C@@H]3O[C@H](COP(O)(O)=O)[C@@H](O)[C@H]3O)C2=NC=N1\",\n  \"CCC=C/CC=C/CC=C/CCCCCCCC(O)=O\",\n  \"N[C@@H](CO)C(O)=O\",\n  \"CSCC[C@H](N)C(O)=O\",\n  \"N[C@@H](CC1=CC=C(O)C=C1)C(O)=O\",\n  \"C[C@H](CCCC(C)(C)O)[C@@]1([H])CC[C@@]2([H])C(CCC[C@]12C)=CC=C1C[C@@H](O)C[C@H](O)C1=C\",\n  \"CC(C=CC=C(/C)C=CC1C(C)=CC(O)CC1(C)C)=C/C=C/C=C(C)/C=C/C=C(C)/C=C/C1=C(C)CC(O)CC1(C)C\",\n  \"N[C@@H](CSSC[C@H](N)C(O)=O)C(O)=O\",\n  \"OC(=O)CCC(O)=O\",\n  \"CC1=C(C)C=C2N(C[C@H](O)[C@H](O)[C@H](O)CO)C3=NC(=O)NC(=O)C3=NC2=C1\",\n  \"[H]C(=O)[C@H](NC(C)=O)[C@@H](O)[C@H](O)[C@H](O)CO\",\n  \"N[C@@H](CCC(O)=O)C(O)=O\",\n  \"N[C@@H](CCC(=O)N[C@@H](CS)C(=O)NCC(O)=O)C(O)=O\",\n  \"CCCC(=O)O[C@H](COC(=O)CC)COP(O)(=O)OC[C@H](N)C(O)=O\",\n  \"NCC(O)=O\",\n  \"C[C@H](CCCC(C)(C)O)[C@@]1([H])CC[C@@]2([H])C(CCC[C@]12C)=CC=C1C[C@@H](O)CCC1=C\",\n  \"CC1=NC=C(CO)C(C=O)=C1O\",\n  \"CN(CC(O)=O)C(N)=N\",\n  \"CC(C)C[C@H](N)C(O)=O\",\n  \"N[C@@H](CC1=CNC2=CC=CC=C12)C(O)=O\",\n  \"N[C@@H](CS)C(O)=O\",\n  \"CC1=C(CCO)SC=[N+]1CC1=CN=C(C)N=C1N\",\n  \"CC(C)[C@@H](C)C=C[C@@H](C)[C@@]1([H])CC[C@@]2([H])C(CCC[C@]12C)=CC=C1C[C@@H](O)CCC1=C\",\n  \"CCCCCC=C/CC=C/CC=C/CCCCCCC(O)=O\",\n  \"N[C@@H](CCCNC(N)=O)C(O)=O\",\n  \"C[C@@H](O)[C@H](N)C(O)=O\",\n  \"NC(=O)C1=CN(C=CC1)[C@@H]1O[C@H](CO[P@](O)(=O)O[P@](O)(=O)OC[C@H]2O[C@H]([C@H](O)[C@@H]2O)N2C=NC3=C(N)N=CN=C23)[C@@H](O)[C@H]1O\",\n  \"NC1=NC(=O)C2=NC(CNC3=CC=C(C=C3)C(=O)N[C@@H](CCC(O)=O)C(O)=O)=CN=C2N1\",\n  \"CCC=C/CC=C/CC=C/CC=C/CC=C/CCCC(O)=O\",\n  \"C[C@H](N)C(O)=O\",\n  \"CC(C)[C@H](N)C(O)=O\",\n  \"CC(=C/CO)C=CC=C(/C)C=CC1=C(C)CCCC1(C)C\",\n  \"CC(C)CCC[C@@H](C)CCC[C@@H](C)CCC[C@]1(C)CCC2=C(O1)C(C)=C(C)C(O)=C2C\",\n  \"CC1=C(O)C(CO)=C(CO)C=N1\",\n  \"OC(=O)CCCCC1CCSS1\",\n  \"CC[C@H](C)[C@H](N)C(O)=O\",\n  \"COC(=O)[C@H](CC1=CC=CC=C1)NC(=O)[C@@H](N)CC(O)=O\",\n  \"CC(C)CCC[C@@H](C)[C@@]1([H])CC[C@@]2([H])C(CCC[C@]12C)=CC=C1C[C@@H](O)CCC1=C\",\n  \"CC1=CC(=O)C2=CC=CC=C2C1=O\",\n  \"NC1=NC=NC2=C1N=CN2[C@@H]1O[C@H](COP(O)(=O)OP(O)(=O)OP(O)(O)=O)[C@@H](O)[C@H]1O\",\n  \"OC(=O)[C@@H]1CCCN1\",\n  \"NC1=C2NC=NC2=NC=N1\",\n  \"N[C@@H](CC(N)=O)C(O)=O\",\n  \"[H][C@]12[C@H](C[C@H](O)C=C1C=C[C@H](C)[C@@H]2CC[C@@H](O)C[C@@H](O)CC(O)=O)OC(=O)[C@@H](C)CC\",\n  \"COCCCCC(=NOCCN)C1=CC=C(C=C1)C(F)(F)F\",\n  \"CCCCC(=O)N(CC1=CC=C(C=C1)C1=CC=CC=C1C1=NNN=N1)[C@@H](C(C)C)C(O)=O\",\n  \"[H][C@@]12CCC[C@]1([H])N([C@@H](C2)C(O)=O)C(=O)[C@H](C)N[C@@H](CCC1=CC=CC=C1)C(=O)OCC\",\n  \"C[C@@H](CC1=CC(O)=C(O)C=C1)[C@H](C)CC1=CC(O)=C(O)C=C1\",\n  \"[H][C@@]12C[C@@]3([H])[C@]4([H])C[C@H](F)C5=CC(=O)C=C[C@]5(C)[C@@]4([H])[C@@H](O)C[C@]3(C)[C@@]1(OC(C)(C)O2)C(=O)CO\",\n  \"NCC(CC(O)=O)C1=CC=C(Cl)C=C1\",\n  \"CC(N)CC1=CC=CC=C1\",\n  \"CSCC[C@H](NC(=O)[C@H](CC1=CNC2=C1C=CC=C2)NC(=O)CCNC(=O)OC(C)(C)C)C(=O)N[C@@H](CC(O)=O)C(=O)N[C@@H](CC1=CC=CC=C1)C(N)=O\",\n  \"CN1CCC[C@H]1C1=CN=CC=C1\",\n  \"CC1O[C@@]2(CS1)CN1CCC2CC1\",\n  \"OC1N=C(C2=CC=CC=C2Cl)C2=C(NC1=O)C=CC(Cl)=C2\",\n  \"COC(=O)CCC1=CC=C(OCC(O)CNC(C)C)C=C1\",\n  \"CC(C)C[C@H](NC(=O)[C@H](CC1=CC=CC=C1)NC(=O)C1=CN=CC=N1)B(O)O\",\n  \"[H]C(Cl)=CC(O)(CC)C#C\",\n  \"C[C@@](CC1=CC(O)=C(O)C=C1)(NN)C(O)=O\",\n  \"CC(C)(N)CC1=CC=CC=C1\",\n  \"CC(C)NCCCC1(C(N)=O)C2=CC=CC=C2C2=CC=CC=C12\",\n  \"COC1=CC=CC(=C1)[C@@]1(O)CCCC[C@@H]1CN(C)C\",\n  \"NC1=NC=NC2=C1N=CN2[C@@H]1O[C@H](CO)[C@@H](O)[C@@H]1O\",\n  \"CC(C)NCC(O)COC1=CC=C(CCOCC2CC2)C=C1\",\n  \"OC(CN1C=NC=N1)(CN1C=NC=N1)C1=C(F)C=C(F)C=C1\",\n  \"CC1=C(C)C2=C(CCC(C)(COC3=CC=C(CC4SC(=O)NC4=O)C=C3)O2)C(C)=C1O\",\n  \"CCOC(=O)C1=C[C@@H](OC(CC)CC)[C@H](NC(C)=O)[C@@H](N)C1\",\n  \"CC[C@H]1OC(=O)[C@H](C)[C@@H](O[C@H]2C[C@@](C)(OC)[C@@H](O)[C@H](C)O2)[C@H](C)[C@@H](O[C@@H]2O[C@H](C)C[C@@H]([C@H]2O)N(C)C)[C@](C)(O)C[C@@H](C)C(=O)[C@H](C)[C@@H](O)[C@]1(C)O\",\n  \"[H]O[Co+]N1C2=C(C)/C3=N/C(=CC4=NC(=C(C)/C5=N[C@@](C)([C@@]1([H])[C@H](CC(=O)N)[C@@]2(C)CCC(=O)NC[C@@H](C)OP(=O)([O-])O[C@H]1[C@@H](O)[C@H](O[C@@H]1CO)N1C=NC2=CC(C)=C(C)C=C12)[C@@](C)(CC(N)=O)[C@@H]5CCC(=O)N)[C@@](C)(CC(=O)N)[C@@H]4CCC(=O)N)/C(C)(C)[C@@H]3CCC(=O)N\",\n  \"CN1C=NC2=C1C(=O)N(C)C(=O)N2C\",\n  \"C[N+](C)(C)CCOC(=O)CCC(=O)OCC[N+](C)(C)C\",\n  \"CCCC1=NN(C)C2=C1NC(=NC2=O)C1=C(OCC)C=CC(=C1)S(=O)(=O)N1CCN(C)CC1\",\n];\n","import React from \"react\";\nimport _ from \"lodash\";\nimport MoleculeStructure from \"../components/MoleculeStructure/MoleculeStructure\";\nimport { SMILES_LIST } from \"../utils/smiles\";\n\nclass ExampleList extends React.Component {\n  state = {\n    matches: SMILES_LIST,\n    searchValue: \"\",\n  };\n\n  render() {\n    const matches = this.state.matches.slice(0, 50);\n    return (\n      <div id=\"component-example-substruct-search\" className=\"container\">\n        <section className=\"hero\">\n          <div className=\"hero-body\">\n            <p className=\"title\">Substructure match</p>\n            <p className=\"subtitle\">\n              You can perform client-side substructure match.\n            </p>\n          </div>\n        </section>\n        <div className=\"columns\" style={{ margin: \"12px 0\" }}>\n          <div className=\"column\">\n            <div className=\"field\">\n              <div className=\"control has-icons-left\">\n                <input\n                  className=\"input\"\n                  type=\"email\"\n                  onChange={(e) => this.handleSearchChange(e)}\n                  placeholder=\"Enter a SMARTS or SMILES string here...\"\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-search\" />\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-multiline\" style={{ margin: \"12px\" }}>\n          {matches.length > 0\n            ? matches.slice(0, 40).map((smiles) => (\n                <div className=\"column\" key={smiles}>\n                  <MoleculeStructure\n                    id={smiles}\n                    structure={smiles}\n                    subStructure={this.state.searchValue}\n                    height={200}\n                    width={200}\n                    svgMode\n                  />\n                </div>\n              ))\n            : \"Input is either invalid or no matches were found.\"}\n        </div>\n      </div>\n    );\n  }\n\n  handleSearchChange = _.debounce((e) => {\n    const noMatchLength = 2;\n    const currentVal = e.target.value;\n    this.setState({ searchValue: currentVal });\n    if (!currentVal) {\n      this.setState({ smilesList: SMILES_LIST });\n    } else {\n      const qmol = window.RDKit.get_qmol(currentVal);\n      const matches = SMILES_LIST.filter((smiles) => {\n        const mol = window.RDKit.get_mol(smiles);\n        const hasMatch = mol.get_substruct_match(qmol).length > noMatchLength;\n        mol.delete();\n        return hasMatch;\n      });\n      this.setState({ matches });\n      if (qmol.is_valid()) {\n      } else {\n        this.setState({ matches: [] });\n      }\n      qmol.delete();\n    }\n  }, 300);\n}\n\nexport default ExampleList;\n","import MoleculeStructure from \"../components/MoleculeStructure/MoleculeStructure\";\n\nfunction ExampleSVG() {\n  const caffeine = \"CN1C=NC2=C1C(=O)N(C(=O)N2C)\";\n  const aspirin = \"CC(=O)Oc1ccccc1C(=O)O\";\n\n  return (\n    <div id=\"component-example-svg\" className=\"container\">\n      <section className=\"hero\">\n        <div className=\"hero-body\">\n          <p className=\"title\">SVG Rendering</p>\n          <p className=\"subtitle\">You can render molecules using svg.</p>\n        </div>\n      </section>\n      <div className=\"columns is-desktop\">\n        <div className=\"column\">\n          <MoleculeStructure\n            id=\"structure-example-svg-caffeine\"\n            structure={caffeine}\n            width={350}\n            height={300}\n            svgMode\n          />\n        </div>\n        <div className=\"column\">\n          <MoleculeStructure\n            id=\"structure-example-svg-aspirin\"\n            structure={aspirin}\n            width={350}\n            height={300}\n            svgMode\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ExampleSVG;\n","import MoleculeStructure from \"../components/MoleculeStructure/MoleculeStructure\";\n\nfunction ExampleCanvas() {\n  const caffeine = \"CN1C=NC2=C1C(=O)N(C(=O)N2C)\";\n  const aspirin = \"CC(=O)Oc1ccccc1C(=O)O\";\n\n  return (\n    <div id=\"component-example-canvas\" className=\"container\">\n      <section className=\"hero\">\n        <div className=\"hero-body\">\n          <p className=\"title\">Canvas rendering</p>\n          <p className=\"subtitle\">\n            You can also render molecules using the HTML Canvas API.\n          </p>\n        </div>\n      </section>\n      <div className=\"columns is-desktop\">\n        <div className=\"column\">\n          <MoleculeStructure\n            id=\"structure-example-canvas-caffeine\"\n            structure={caffeine}\n            width={350}\n            height={300}\n          />\n        </div>\n        <div className=\"column\">\n          <MoleculeStructure\n            id=\"structure-example-canvas-aspirin\"\n            structure={aspirin}\n            width={350}\n            height={300}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ExampleCanvas;\n","import MoleculeStructure from \"../components/MoleculeStructure/MoleculeStructure\";\n\nfunction ExampleDrawingOptions() {\n  const caffeine = \"CN1C=NC2=C1C(=O)N(C(=O)N2C)\";\n  const caffeineSubStruct = \"[N,n,O;!H0]\";\n\n  const aspirin = \"CC(=O)Oc1ccccc1C(=O)O\";\n  const aspirinSubStruct = \"CC(=O)Oc1ccccc1C\";\n\n  return (\n    <div id=\"component-example-drawing-options\" className=\"container\">\n      <section className=\"hero\">\n        <div className=\"hero-body\">\n          <p className=\"title\">Additional Drawing Options</p>\n          <p className=\"subtitle\">\n            RDKit.js provides you with all these additional options.\n          </p>\n        </div>\n      </section>\n      <div className=\"columns is-desktop\">\n        <div className=\"column\">\n          <MoleculeStructure\n            id=\"structure-example-drawing-options-caffeine\"\n            structure={caffeine}\n            subStructure={caffeineSubStruct}\n            width={350}\n            height={300}\n            svgMode\n            extraDetails={{\n              addAtomIndices: true,\n              highlightColor: [1, 0, 1],\n              legend: \"caffeine\",\n            }}\n          />\n        </div>\n        <div className=\"column\">\n          <MoleculeStructure\n            id=\"structure-example-drawing-options-aspirin\"\n            structure={aspirin}\n            subStructure={aspirinSubStruct}\n            extraDetails={{\n              addAtomIndices: true,\n              highlightColor: [0, 1, 1],\n              legend: \"aspirin\",\n            }}\n            width={350}\n            height={300}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ExampleDrawingOptions;\n","import MoleculeStructure from \"../components/MoleculeStructure/MoleculeStructure\";\nimport { SMILES_LIST } from \"../utils/smiles\";\n\nfunction ExampleList() {\n  return (\n    <div id=\"component-example-list\" className=\"container\">\n      <section className=\"hero\">\n        <div className=\"hero-body\">\n          <p className=\"title\">Overview</p>\n          <p className=\"subtitle\">\n            You can draw any molecule from SMILES dynamically with rdkit.js .\n          </p>\n        </div>\n      </section>\n      <div\n        className=\"columns is-desktop\"\n        style={{ margin: \"12px\", overflowX: \"scroll\" }}\n      >\n        {SMILES_LIST.map((smiles) => (\n          <div className=\"column\" key={smiles}>\n            <MoleculeStructure\n              id={smiles}\n              structure={smiles}\n              height={200}\n              width={200}\n              svgMode\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default ExampleList;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Introduction from \"./components/Introduction/Introduction\";\nimport CodeExample from \"./components/CodeExample/CodeExample\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport ExampleMoleculeStructure from \"./examples/ExampleMoleculeStructure\";\nimport ExampleSubstructure from \"./examples/ExampleSubstructure\";\nimport ExampleMultiSubstructure from \"./examples/ExampleMultiSubstructure\";\nimport ExampleSubstructureSearch from \"./examples/ExampleSubstructureSearch\";\nimport ExampleSVG from \"./examples/ExampleSvg\";\nimport ExampleCanvas from \"./examples/ExampleCanvas\";\nimport ExampleDrawingOptions from \"./examples/ExampleDrawingOptions\";\nimport ExampleList from \"./examples/ExampleList\";\n/* eslint import/no-webpack-loader-syntax: off */\nimport MoleculeStructureCode from \"!!raw-loader!./components/MoleculeStructure/MoleculeStructure\";\nimport ExampleSVGCode from \"!!raw-loader!./examples/ExampleSvg.js\";\nimport ExampleCanvasCode from \"!!raw-loader!./examples/ExampleCanvas.js\";\nimport ExampleSubstructureCode from \"!!raw-loader!./examples/ExampleSubstructure.js\";\nimport ExampleMultiSubstructureCode from \"!!raw-loader!./examples/ExampleMultiSubstructure.js\";\nimport ExampleDrawingOptionsCode from \"!!raw-loader!./examples/ExampleDrawingOptions.js\";\nimport ExampleSubstructureSearchCode from \"!!raw-loader!./examples/ExampleSubstructureSearch\";\nimport ExampleListCode from \"!!raw-loader!./examples/ExampleList.js\";\nimport \"./index.css\";\n\nReactDOM.render(<NavBar />, document.getElementById(\"navbar\"));\n\nReactDOM.render(<Introduction />, document.getElementById(\"introduction\"));\n\nconst examples = [\n  {\n    code: ExampleListCode,\n    component: <ExampleList />,\n    elementId: \"example-list\",\n  },\n  {\n    code: MoleculeStructureCode,\n    component: <ExampleMoleculeStructure />,\n    elementId: \"example-mol-structure\",\n  },\n  {\n    code: ExampleSVGCode,\n    component: <ExampleSVG />,\n    elementId: \"example-svg\",\n  },\n  {\n    code: ExampleCanvasCode,\n    component: <ExampleCanvas />,\n    elementId: \"example-canvas\",\n  },\n  {\n    code: ExampleSubstructureCode,\n    component: <ExampleSubstructure />,\n    elementId: \"example-substructures\",\n  },\n  {\n    code: ExampleMultiSubstructureCode,\n    component: <ExampleMultiSubstructure />,\n    elementId: \"example-multi-substructures\",\n  },\n  {\n    code: ExampleDrawingOptionsCode,\n    component: <ExampleDrawingOptions />,\n    elementId: \"example-all-options\",\n  },\n  {\n    code: ExampleSubstructureSearchCode,\n    component: <ExampleSubstructureSearch />,\n    elementId: \"example-substructure-search\",\n  },\n];\n\nexamples.forEach((example) => {\n  ReactDOM.render(\n    <CodeExample code={example.code}>{example.component}</CodeExample>,\n    document.getElementById(example.elementId)\n  );\n});\n","export default \"import MoleculeStructure from \\\"../components/MoleculeStructure/MoleculeStructure\\\";\\nimport { SMILES_LIST } from \\\"../utils/smiles\\\";\\n\\nfunction ExampleList() {\\n  return (\\n    <div id=\\\"component-example-list\\\" className=\\\"container\\\">\\n      <section className=\\\"hero\\\">\\n        <div className=\\\"hero-body\\\">\\n          <p className=\\\"title\\\">Overview</p>\\n          <p className=\\\"subtitle\\\">\\n            You can draw any molecule from SMILES dynamically with rdkit.js .\\n          </p>\\n        </div>\\n      </section>\\n      <div\\n        className=\\\"columns is-desktop\\\"\\n        style={{ margin: \\\"12px\\\", overflowX: \\\"scroll\\\" }}\\n      >\\n        {SMILES_LIST.map((smiles) => (\\n          <div className=\\\"column\\\" key={smiles}>\\n            <MoleculeStructure\\n              id={smiles}\\n              structure={smiles}\\n              height={200}\\n              width={200}\\n              svgMode\\n            />\\n          </div>\\n        ))}\\n      </div>\\n    </div>\\n  );\\n}\\n\\nexport default ExampleList;\\n\";","export default \"import React, { Component } from \\\"react\\\";\\nimport _ from \\\"lodash\\\";\\nimport PropTypes from \\\"prop-types\\\";\\n\\nimport \\\"./MoleculeStructure.css\\\";\\nimport initRDKit from \\\"../../utils/initRDKit\\\";\\n\\nclass MoleculeStructure extends Component {\\n  static propTypes = {\\n    /**\\n     * Generic properties\\n     */\\n    id: PropTypes.string.isRequired,\\n    className: PropTypes.string,\\n    svgMode: PropTypes.bool,\\n    width: PropTypes.number,\\n    height: PropTypes.number,\\n    /**\\n     * RDKit-specific properties\\n     */\\n    structure: PropTypes.string.isRequired,\\n    subStructure: PropTypes.string,\\n    extraDetails: PropTypes.object,\\n    drawingDelay: PropTypes.number,\\n  };\\n\\n  static defaultProps = {\\n    subStructure: \\\"\\\",\\n    className: \\\"\\\",\\n    width: 250,\\n    height: 200,\\n    svgMode: false,\\n    extraDetails: {},\\n    drawingDelay: undefined,\\n  };\\n\\n  constructor(props) {\\n    super(props);\\n\\n    this.MOL_DETAILS = {\\n      width: this.props.width,\\n      height: this.props.height,\\n      bondLineWidth: 1,\\n      addStereoAnnotation: true,\\n      ...this.props.extraDetails,\\n    };\\n\\n    this.state = {\\n      svg: undefined,\\n      rdKitLoaded: false,\\n      rdKitError: false,\\n    };\\n  }\\n\\n  draw() {\\n    if (this.props.drawingDelay) {\\n      setTimeout(() => {\\n        this.drawSVGorCanvas();\\n      }, this.props.drawingDelay);\\n    } else {\\n      this.drawSVGorCanvas();\\n    }\\n  }\\n\\n  drawSVGorCanvas() {\\n    const mol = window.RDKit.get_mol(this.props.structure || \\\"invalid\\\");\\n    const qmol = window.RDKit.get_qmol(this.props.subStructure || \\\"invalid\\\");\\n\\n    if (this.props.svgMode && this.isValidMol(mol)) {\\n      const svg = mol.get_svg_with_highlights(this.getMolDetails(mol, qmol));\\n      this.setState({ svg });\\n    } else if (this.isValidMol(mol)) {\\n      const canvas = document.getElementById(this.props.id);\\n      mol.draw_to_canvas_with_highlights(canvas, this.getMolDetails(mol, qmol));\\n    }\\n\\n    /**\\n     * Delete C++ mol objects manually\\n     * https://emscripten.org/docs/porting/connecting_cpp_and_javascript/embind.html#memory-management\\n     */\\n    mol.delete();\\n    qmol.delete();\\n  }\\n\\n  isValidMol(mol) {\\n    return !!mol && mol.is_valid();\\n  }\\n\\n  getMolDetails(mol, qmol) {\\n    if (this.isValidMol(mol) && this.isValidMol(qmol)) {\\n      const subStructHighlightDetails = JSON.parse(\\n        mol.get_substruct_matches(qmol)\\n      );\\n      const subStructHighlightDetailsMerged = !_.isEmpty(\\n        subStructHighlightDetails\\n      )\\n        ? subStructHighlightDetails.reduce(\\n            (acc, { atoms, bonds }) => ({\\n              atoms: [...acc.atoms, ...atoms],\\n              bonds: [...acc.bonds, ...bonds],\\n            }),\\n            { bonds: [], atoms: [] }\\n          )\\n        : subStructHighlightDetails;\\n      return JSON.stringify({\\n        ...this.MOL_DETAILS,\\n        ...(this.props.extraDetails || {}),\\n        ...subStructHighlightDetailsMerged,\\n      });\\n    } else {\\n      return JSON.stringify({\\n        ...this.MOL_DETAILS,\\n        ...(this.props.extraDetails || {}),\\n      });\\n    }\\n  }\\n\\n  componentDidMount() {\\n    initRDKit()\\n      .then(() => {\\n        this.setState({ rdKitLoaded: true });\\n        this.draw();\\n      })\\n      .catch(() => {\\n        this.setState({ rdKitError: true });\\n      });\\n  }\\n\\n  componentDidUpdate(prevProps) {\\n    if (this.state.rdKitLoaded) {\\n      const shouldUpdateDrawing =\\n        prevProps.structure !== this.props.structure ||\\n        prevProps.subStructure !== this.props.subStructure ||\\n        !_.isEqual(prevProps.extraDetails, this.props.extraDetails);\\n\\n      if (shouldUpdateDrawing) {\\n        this.draw();\\n      }\\n    }\\n  }\\n\\n  render() {\\n    if (this.state.rdKitError) {\\n      return \\\"Error loading renderer.\\\";\\n    }\\n    if (!this.state.rdKitLoaded) {\\n      return \\\"Loading renderer...\\\";\\n    }\\n\\n    const mol = window.RDKit.get_mol(this.props.structure || \\\"invalid\\\");\\n    const isValidMol = this.isValidMol(mol);\\n    mol.delete();\\n\\n    if (!isValidMol) {\\n      return (\\n        <span title={`Cannot render structure: ${this.props.structure}`}>\\n          Render Error.\\n        </span>\\n      );\\n    } else if (this.props.svgMode) {\\n      return (\\n        <div\\n          title={this.props.structure}\\n          className={\\\"molecule-structure-svg \\\" + (this.props.className || \\\"\\\")}\\n          style={{ width: this.props.width, height: this.props.height }}\\n          dangerouslySetInnerHTML={{ __html: this.state.svg }}\\n        ></div>\\n      );\\n    } else {\\n      return (\\n        <div\\n          className={\\n            \\\"molecule-canvas-container \\\" + (this.props.className || \\\"\\\")\\n          }\\n        >\\n          <canvas\\n            title={this.props.structure}\\n            id={this.props.id}\\n            width={this.props.width}\\n            height={this.props.height}\\n          ></canvas>\\n        </div>\\n      );\\n    }\\n  }\\n}\\n\\nexport default MoleculeStructure;\\n\";","export default \"import MoleculeStructure from \\\"../components/MoleculeStructure/MoleculeStructure\\\";\\n\\nfunction ExampleSVG() {\\n  const caffeine = \\\"CN1C=NC2=C1C(=O)N(C(=O)N2C)\\\";\\n  const aspirin = \\\"CC(=O)Oc1ccccc1C(=O)O\\\";\\n\\n  return (\\n    <div id=\\\"component-example-svg\\\" className=\\\"container\\\">\\n      <section className=\\\"hero\\\">\\n        <div className=\\\"hero-body\\\">\\n          <p className=\\\"title\\\">SVG Rendering</p>\\n          <p className=\\\"subtitle\\\">You can render molecules using svg.</p>\\n        </div>\\n      </section>\\n      <div className=\\\"columns is-desktop\\\">\\n        <div className=\\\"column\\\">\\n          <MoleculeStructure\\n            id=\\\"structure-example-svg-caffeine\\\"\\n            structure={caffeine}\\n            width={350}\\n            height={300}\\n            svgMode\\n          />\\n        </div>\\n        <div className=\\\"column\\\">\\n          <MoleculeStructure\\n            id=\\\"structure-example-svg-aspirin\\\"\\n            structure={aspirin}\\n            width={350}\\n            height={300}\\n            svgMode\\n          />\\n        </div>\\n      </div>\\n    </div>\\n  );\\n}\\n\\nexport default ExampleSVG;\\n\";","export default \"import MoleculeStructure from \\\"../components/MoleculeStructure/MoleculeStructure\\\";\\n\\nfunction ExampleCanvas() {\\n  const caffeine = \\\"CN1C=NC2=C1C(=O)N(C(=O)N2C)\\\";\\n  const aspirin = \\\"CC(=O)Oc1ccccc1C(=O)O\\\";\\n\\n  return (\\n    <div id=\\\"component-example-canvas\\\" className=\\\"container\\\">\\n      <section className=\\\"hero\\\">\\n        <div className=\\\"hero-body\\\">\\n          <p className=\\\"title\\\">Canvas rendering</p>\\n          <p className=\\\"subtitle\\\">\\n            You can also render molecules using the HTML Canvas API.\\n          </p>\\n        </div>\\n      </section>\\n      <div className=\\\"columns is-desktop\\\">\\n        <div className=\\\"column\\\">\\n          <MoleculeStructure\\n            id=\\\"structure-example-canvas-caffeine\\\"\\n            structure={caffeine}\\n            width={350}\\n            height={300}\\n          />\\n        </div>\\n        <div className=\\\"column\\\">\\n          <MoleculeStructure\\n            id=\\\"structure-example-canvas-aspirin\\\"\\n            structure={aspirin}\\n            width={350}\\n            height={300}\\n          />\\n        </div>\\n      </div>\\n    </div>\\n  );\\n}\\n\\nexport default ExampleCanvas;\\n\";","export default \"import MoleculeStructure from \\\"../components/MoleculeStructure/MoleculeStructure\\\";\\n\\nfunction ExampleSubstructure() {\\n  const caffeine = \\\"CN1C=NC2=C1C(=O)N(C(=O)N2C)\\\";\\n  const caffeineSubStruct = \\\"[N,n,O;!H0]\\\";\\n\\n  const aspirin = \\\"CC(=O)Oc1ccccc1C(=O)O\\\";\\n  const aspirinSubStruct = \\\"CC(=O)Oc1ccccc1C\\\";\\n\\n  return (\\n    <div id=\\\"component-example-substruct\\\" className=\\\"container\\\">\\n      <section className=\\\"hero\\\">\\n        <div className=\\\"hero-body\\\">\\n          <p className=\\\"title\\\">Substructure Highlight</p>\\n          <p className=\\\"subtitle\\\">\\n            You can also highlight substructure of molecules with both the SVG\\n            and Canvas APIs.\\n          </p>\\n        </div>\\n      </section>\\n      <div className=\\\"columns is-desktop\\\">\\n        <div className=\\\"column\\\">\\n          <MoleculeStructure\\n            id=\\\"structure-example-substruct-svg-caffeine\\\"\\n            structure={caffeine}\\n            subStructure={caffeineSubStruct}\\n            width={350}\\n            height={300}\\n            svgMode\\n          />\\n        </div>\\n        <div className=\\\"column\\\">\\n          <MoleculeStructure\\n            id=\\\"structure-example-subsctruct-canvas-aspirin\\\"\\n            structure={aspirin}\\n            subStructure={aspirinSubStruct}\\n            width={350}\\n            height={300}\\n          />\\n        </div>\\n      </div>\\n    </div>\\n  );\\n}\\n\\nexport default ExampleSubstructure;\\n\";","export default \"import MoleculeStructure from \\\"../components/MoleculeStructure/MoleculeStructure\\\";\\n\\nfunction ExampleMultiSubstructure() {\\n  const caffeine = \\\"CN1C=NC2=C1C(=O)N(C(=O)N2C)\\\";\\n  const caffeineSubStruct = \\\"[N,n,o,O]\\\";\\n\\n  const aspirin = \\\"CC(=O)Oc1ccccc1C(=O)O\\\";\\n  const aspirinSubStruct = \\\"[O,o].c1ccccc1\\\";\\n\\n  return (\\n    <div id=\\\"component-example-multi-substruct\\\" className=\\\"container\\\">\\n      <section className=\\\"hero\\\">\\n        <div className=\\\"hero-body\\\">\\n          <p className=\\\"title\\\">Multi-substructure Highlight</p>\\n          <p className=\\\"subtitle\\\">\\n            You can also highlight multiple substructures of molecules with\\n            SMILES, SMARTS and a combination of the two with dot notation.\\n          </p>\\n        </div>\\n      </section>\\n      <div className=\\\"columns is-desktop\\\">\\n        <div className=\\\"column\\\">\\n          <MoleculeStructure\\n            id=\\\"structure-example-multisubstruct-svg-caffeine\\\"\\n            structure={caffeine}\\n            subStructure={caffeineSubStruct}\\n            width={350}\\n            height={300}\\n            svgMode\\n          />\\n        </div>\\n        <div className=\\\"column\\\">\\n          <MoleculeStructure\\n            id=\\\"structure-example-multisubsctruct-canvas-aspirin\\\"\\n            structure={aspirin}\\n            subStructure={aspirinSubStruct}\\n            width={350}\\n            height={300}\\n          />\\n        </div>\\n      </div>\\n    </div>\\n  );\\n}\\n\\nexport default ExampleMultiSubstructure;\\n\";","export default \"import MoleculeStructure from \\\"../components/MoleculeStructure/MoleculeStructure\\\";\\n\\nfunction ExampleDrawingOptions() {\\n  const caffeine = \\\"CN1C=NC2=C1C(=O)N(C(=O)N2C)\\\";\\n  const caffeineSubStruct = \\\"[N,n,O;!H0]\\\";\\n\\n  const aspirin = \\\"CC(=O)Oc1ccccc1C(=O)O\\\";\\n  const aspirinSubStruct = \\\"CC(=O)Oc1ccccc1C\\\";\\n\\n  return (\\n    <div id=\\\"component-example-drawing-options\\\" className=\\\"container\\\">\\n      <section className=\\\"hero\\\">\\n        <div className=\\\"hero-body\\\">\\n          <p className=\\\"title\\\">Additional Drawing Options</p>\\n          <p className=\\\"subtitle\\\">\\n            RDKit.js provides you with all these additional options.\\n          </p>\\n        </div>\\n      </section>\\n      <div className=\\\"columns is-desktop\\\">\\n        <div className=\\\"column\\\">\\n          <MoleculeStructure\\n            id=\\\"structure-example-drawing-options-caffeine\\\"\\n            structure={caffeine}\\n            subStructure={caffeineSubStruct}\\n            width={350}\\n            height={300}\\n            svgMode\\n            extraDetails={{\\n              addAtomIndices: true,\\n              highlightColor: [1, 0, 1],\\n              legend: \\\"caffeine\\\",\\n            }}\\n          />\\n        </div>\\n        <div className=\\\"column\\\">\\n          <MoleculeStructure\\n            id=\\\"structure-example-drawing-options-aspirin\\\"\\n            structure={aspirin}\\n            subStructure={aspirinSubStruct}\\n            extraDetails={{\\n              addAtomIndices: true,\\n              highlightColor: [0, 1, 1],\\n              legend: \\\"aspirin\\\",\\n            }}\\n            width={350}\\n            height={300}\\n          />\\n        </div>\\n      </div>\\n    </div>\\n  );\\n}\\n\\nexport default ExampleDrawingOptions;\\n\";","export default \"import React from \\\"react\\\";\\nimport _ from \\\"lodash\\\";\\nimport MoleculeStructure from \\\"../components/MoleculeStructure/MoleculeStructure\\\";\\nimport { SMILES_LIST } from \\\"../utils/smiles\\\";\\n\\nclass ExampleList extends React.Component {\\n  state = {\\n    matches: SMILES_LIST,\\n    searchValue: \\\"\\\",\\n  };\\n\\n  render() {\\n    const matches = this.state.matches.slice(0, 50);\\n    return (\\n      <div id=\\\"component-example-substruct-search\\\" className=\\\"container\\\">\\n        <section className=\\\"hero\\\">\\n          <div className=\\\"hero-body\\\">\\n            <p className=\\\"title\\\">Substructure match</p>\\n            <p className=\\\"subtitle\\\">\\n              You can perform client-side substructure match.\\n            </p>\\n          </div>\\n        </section>\\n        <div className=\\\"columns\\\" style={{ margin: \\\"12px 0\\\" }}>\\n          <div className=\\\"column\\\">\\n            <div className=\\\"field\\\">\\n              <div className=\\\"control has-icons-left\\\">\\n                <input\\n                  className=\\\"input\\\"\\n                  type=\\\"email\\\"\\n                  onChange={(e) => this.handleSearchChange(e)}\\n                  placeholder=\\\"Enter a SMARTS or SMILES string here...\\\"\\n                />\\n                <span className=\\\"icon is-small is-left\\\">\\n                  <i className=\\\"fas fa-search\\\" />\\n                </span>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div className=\\\"columns is-multiline\\\" style={{ margin: \\\"12px\\\" }}>\\n          {matches.length > 0\\n            ? matches.slice(0, 40).map((smiles) => (\\n                <div className=\\\"column\\\" key={smiles}>\\n                  <MoleculeStructure\\n                    id={smiles}\\n                    structure={smiles}\\n                    subStructure={this.state.searchValue}\\n                    height={200}\\n                    width={200}\\n                    svgMode\\n                  />\\n                </div>\\n              ))\\n            : \\\"Input is either invalid or no matches were found.\\\"}\\n        </div>\\n      </div>\\n    );\\n  }\\n\\n  handleSearchChange = _.debounce((e) => {\\n    const noMatchLength = 2;\\n    const currentVal = e.target.value;\\n    this.setState({ searchValue: currentVal });\\n    if (!currentVal) {\\n      this.setState({ smilesList: SMILES_LIST });\\n    } else {\\n      const qmol = window.RDKit.get_qmol(currentVal);\\n      const matches = SMILES_LIST.filter((smiles) => {\\n        const mol = window.RDKit.get_mol(smiles);\\n        const hasMatch = mol.get_substruct_match(qmol).length > noMatchLength;\\n        mol.delete();\\n        return hasMatch;\\n      });\\n      this.setState({ matches });\\n      if (qmol.is_valid()) {\\n      } else {\\n        this.setState({ matches: [] });\\n      }\\n      qmol.delete();\\n    }\\n  }, 300);\\n}\\n\\nexport default ExampleList;\\n\";"],"sourceRoot":""}