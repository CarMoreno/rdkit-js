{"version":3,"sources":["components/CodeExample/CodeExample.js","components/NavBar/NavBar.js","examples/ExampleMoleculeStructure.js","components/MoleculeStructure/MoleculeStructure.js","examples/ExampleSubstructure.js","examples/ExampleSvg.js","examples/ExampleCanvas.js","examples/ExampleDrawingOptions.js","index.js","webpack:///./src/components/MoleculeStructure/MoleculeStructure.js?34a0","webpack:///./src/examples/ExampleSvg.js?e959","webpack:///./src/examples/ExampleCanvas.js?b4aa","webpack:///./src/examples/ExampleSubstructure.js?a3ad","webpack:///./src/examples/ExampleDrawingOptions.js?1990"],"names":["CodeExample","code","children","className","trigger","language","style","a11yDark","NavBar","state","burgerActive","brugerActiveClass","this","padding","role","aria-label","href","src","process","aria-expanded","data-target","onClick","setState","aria-hidden","id","data-tooltip","target","Component","ExampleMoleculeStructure","MoleculeStructure","props","RDKit","window","MOL_DETAILS","width","height","bondLineWidth","addStereoAnnotation","extraDetails","structure","subStructure","svg","undefined","mol","get_mol","qmol","get_qmol","rdKitLoaded","rdKitError","isValidMol","svgMode","get_svg_with_highlights","getMolDetails","canvas","document","getElementById","draw_to_canvas_with_highlights","is_valid","isValidQMol","extraMolDetails","JSON","parse","get_substruct_match","stringify","draw","initRDKitModule","then","catch","prevProps","prevState","oldMol","oldQMol","updateObject","delete","title","dangerouslySetInnerHTML","__html","defaultProps","ExampleSubstructure","ExampleSVG","ExampleCanvas","ExampleDrawingOptions","addAtomIndices","highlightColor","legend","ReactDOM","render"],"mappings":"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","file":"static/js/main.d7550f68.chunk.js","sourcesContent":["import SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { a11yDark } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport ReactCollapsible from \"react-collapsible\";\n\nfunction CodeExample({ code, children }) {\n  return (\n    <>\n      {children}\n      <div className=\"container\">\n        <ReactCollapsible\n          trigger={\n            <button className=\"button is-primary is-light is-large is-fullwidth\">\n              See Code Example\n            </button>\n          }\n        >\n          <div className=\"container\">\n            <SyntaxHighlighter language=\"javascript\" style={a11yDark}>\n              {code}\n            </SyntaxHighlighter>\n          </div>\n        </ReactCollapsible>\n      </div>\n    </>\n  );\n}\n\nexport default CodeExample;\n","import React, { Component } from \"react\";\n\nexport default class NavBar extends Component {\n  state = {\n    burgerActive: false,\n  };\n  render() {\n    const brugerActiveClass = this.state.burgerActive ? \" is-active\" : \"\";\n    return (\n      <>\n        <nav\n          className=\"navbar has-shadow\"\n          style={{ padding: \"12px 0\" }}\n          role=\"navigation\"\n          aria-label=\"main navigation\"\n        >\n          <div className=\"navbar-brand\" style={{ padding: \"6px\" }}>\n            <a className=\"navbar-item\" href=\"#\">\n              <img src={`${process.env.PUBLIC_URL}/rdkitjs_cropped_200.png`} />\n            </a>\n\n            <a\n              role=\"button\"\n              className={`navbar-burger${brugerActiveClass}`}\n              aria-label=\"menu\"\n              aria-expanded=\"false\"\n              data-target=\"navbarBasicExample\"\n              onClick={() => {\n                this.setState({ burgerActive: !this.state.burgerActive });\n              }}\n            >\n              <span aria-hidden=\"true\"></span>\n              <span aria-hidden=\"true\"></span>\n              <span aria-hidden=\"true\"></span>\n            </a>\n          </div>\n\n          <div\n            id=\"navbarBasicExample\"\n            className={`navbar-menu${brugerActiveClass}`}\n          >\n            <div className=\"navbar-start\">\n              <a className=\"navbar-item\" href=\"#\">\n                {\" \"}\n                Home{\" \"}\n              </a>\n              <a className=\"navbar-item\" href=\"#\">\n                {\" \"}\n                Documentation{\" \"}\n              </a>\n            </div>\n\n            <div className=\"navbar-end\">\n              <div className=\"navbar-item\">\n                <div className=\"buttons\">\n                  <a\n                    data-tooltip=\"View Source Code\"\n                    className=\"button has-tooltip-bottom is-white is-big\"\n                    href=\"https://github.com/rdkit/rdkit\"\n                    target=\"_blank\"\n                  >\n                    <span className=\"icon\">\n                      <i className=\"fab fa-github fa-2x\"></i>\n                    </span>\n                  </a>\n                </div>\n              </div>\n              <div className=\"navbar-item\">\n                <div className=\"buttons\">\n                  <a\n                    data-tooltip=\"Go to NPM package\"\n                    className=\"button has-tooltip-bottom is-white is-big\"\n                    href=\"https://www.npmjs.com/package/@rdkit/rdkit\"\n                    target=\"_blank\"\n                  >\n                    <span className=\"icon\">\n                      <i className=\"fab fa-npm fa-2x\"></i>\n                    </span>\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </nav>\n      </>\n    );\n  }\n}\n","function ExampleMoleculeStructure() {\n  return (\n    <div id=\"component-example-moleculestructure\" className=\"container\">\n      <section className=\"hero\">\n        <div className=\"hero-body\">\n          <p className=\"title\">MoleculeStructure</p>\n          <p className=\"subtitle\">\n            The examples below will mostly use the React component{\" \"}\n            <code className=\"is-family-code\">MoleculeStructure</code> to render\n            the examples. You can see the React implementation in the code\n            below.\n          </p>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default ExampleMoleculeStructure;\n","import React, { Component } from \"react\";\nimport \"./MoleculeStructure.css\";\nimport PropTypes from \"prop-types\";\n\nclass MoleculeStructure extends Component {\n  static propTypes = {\n    /**\n     * Generic properties\n     */\n    id: PropTypes.string.isRequired,\n    className: PropTypes.string,\n    svgMode: PropTypes.bool,\n    width: PropTypes.number,\n    height: PropTypes.number,\n    /**\n     * RDKit-specific properties\n     */\n    structure: PropTypes.string.isRequired,\n    subStructure: PropTypes.string,\n    extraDetails: PropTypes.object,\n  };\n\n  static defaultProps = {\n    subStructure: \"\",\n    className: \"\",\n    width: 250,\n    height: 200,\n    svgMode: false,\n    extraDetails: {},\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.RDKit = window.RDKit;\n\n    this.MOL_DETAILS = {\n      width: this.props.width,\n      height: this.props.height,\n      bondLineWidth: 1,\n      addStereoAnnotation: true,\n      ...this.props.extraDetails,\n    };\n\n    const structure =\n      typeof this.props.structure === \"string\" ? this.props.structure : \"\";\n    const subStructure =\n      typeof this.props.subStructure === \"string\"\n        ? this.props.subStructure\n        : \"\";\n    this.state = {\n      svg: undefined,\n      mol: !!this.RDKit ? this.RDKit.get_mol(structure) : \"\",\n      qmol: this.RDKit ? this.RDKit.get_qmol(subStructure) : \"\",\n      rdKitLoaded: !!this.RDKit,\n      rdKitError: false,\n    };\n  }\n\n  draw() {\n    const isValidMol = this.isValidMol();\n    if (isValidMol && this.props.svgMode) {\n      const svg = this.state.mol.get_svg_with_highlights(this.getMolDetails());\n      this.setState({ svg });\n    } else if (isValidMol) {\n      const canvas = document.getElementById(this.props.id);\n      this.state.mol.draw_to_canvas_with_highlights(\n        canvas,\n        this.getMolDetails()\n      );\n    }\n  }\n\n  isValidMol() {\n    return !!this.state.mol && this.state.mol.is_valid();\n  }\n\n  isValidQMol() {\n    return !!this.state.qmol && this.state.qmol.is_valid();\n  }\n\n  getMolDetails() {\n    if (this.isValidMol() && this.isValidQMol()) {\n      const extraMolDetails = JSON.parse(\n        this.state.mol.get_substruct_match(this.state.qmol)\n      );\n      return JSON.stringify({\n        ...this.MOL_DETAILS,\n        ...extraMolDetails,\n      });\n    } else {\n      return JSON.stringify(this.MOL_DETAILS);\n    }\n  }\n\n  componentDidMount() {\n    this.draw();\n\n    if (!this.state.rdKitLoaded) {\n      window\n        .initRDKitModule()\n        .then((RDKit) => {\n          window.RDKit = RDKit;\n          this.RDKit = window.RDKit;\n          this.setState({ rdKitLoaded: true, rdKitError: false });\n        })\n        .catch(() => {\n          this.setState({ rdKitLoaded: false, rdKitError: true });\n        });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const rdkitStateChanged = prevState.rdKitLoaded !== this.state.rdKitLoaded;\n\n    if (rdkitStateChanged && this.state.rdKitLoaded) {\n      let oldMol, oldQMol;\n      const updateObject = {};\n\n      oldMol = this.state.mol || undefined;\n      updateObject.mol = this.RDKit.get_mol(this.props.structure);\n\n      oldQMol = this.state.qmol || undefined;\n      updateObject.qmol = this.RDKit.get_qmol(this.props.subStructure);\n\n      this.setState({ ...updateObject }, () => this.draw());\n\n      /**\n       * Delete C++ mol objects manually\n       * https://emscripten.org/docs/porting/connecting_cpp_and_javascript/embind.html#memory-management\n       */\n      if (oldMol) {\n        oldMol.delete();\n      }\n\n      if (oldQMol) {\n        oldQMol.delete();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    /**\n     * Delete C++ mol objects manually\n     * https://emscripten.org/docs/porting/connecting_cpp_and_javascript/embind.html#memory-management\n     */\n\n    if (this.state.mol) {\n      this.state.mol.delete();\n    }\n\n    if (this.state.qmol) {\n      this.state.qmol.delete();\n    }\n  }\n\n  render() {\n    if (this.state.rdKitError) {\n      return \"Error loading renderer.\";\n    }\n    if (!this.state.rdKitLoaded) {\n      return \"Loading renderer...\";\n    }\n\n    if (!this.isValidMol()) {\n      return (\n        <span title={`Cannot render structure: ${this.props.structure}`}>\n          Render Error.\n        </span>\n      );\n    } else if (this.props.svgMode) {\n      return (\n        <div\n          title={this.props.structure}\n          className={\"molecule-structure-svg \" + (this.props.className || \"\")}\n          style={{ width: this.props.width, height: this.props.height }}\n          dangerouslySetInnerHTML={{ __html: this.state.svg }}\n        ></div>\n      );\n    } else {\n      return (\n        <div\n          className={\n            \"molecule-canvas-container \" + (this.props.className || \"\")\n          }\n        >\n          <canvas\n            title={this.props.structure}\n            id={this.props.id}\n            width={this.props.width}\n            height={this.props.height}\n          ></canvas>\n        </div>\n      );\n    }\n  }\n}\n\nexport default MoleculeStructure;\n","import MoleculeStructure from \"../components/MoleculeStructure/MoleculeStructure\";\n\nfunction ExampleSubstructure() {\n  const caffeine = \"CN1C=NC2=C1C(=O)N(C(=O)N2C)\";\n  const caffeineSubStruct = \"[N,n,O;!H0]\";\n\n  const aspirin = \"CC(=O)Oc1ccccc1C(=O)O\";\n  const aspirinSubStruct = \"CC(=O)Oc1ccccc1C\";\n\n  return (\n    <div id=\"component-example-substruct\" className=\"container\">\n      <section className=\"hero\">\n        <div className=\"hero-body\">\n          <p className=\"title\">Substructure Highlight</p>\n          <p className=\"subtitle\">\n            You can also highlight substructure of molecules with both the SVG\n            and Canvas APIs.\n          </p>\n        </div>\n      </section>\n      <div className=\"columns is-desktop\">\n        <div className=\"column\">\n          <MoleculeStructure\n            width={350}\n            height={300}\n            svgMode\n            structure={caffeine}\n            subStructure={caffeineSubStruct}\n            id=\"structure-example-substruct-svg-caffeine\"\n          />\n        </div>\n        <div className=\"column\">\n          <MoleculeStructure\n            width={350}\n            height={300}\n            structure={aspirin}\n            subStructure={aspirinSubStruct}\n            id=\"structure-example-subsctruct-canvas-aspirin\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ExampleSubstructure;\n","import MoleculeStructure from \"../components/MoleculeStructure/MoleculeStructure\";\n\nfunction ExampleSVG() {\n  const caffeine = \"CN1C=NC2=C1C(=O)N(C(=O)N2C)\";\n  const aspirin = \"CC(=O)Oc1ccccc1C(=O)O\";\n\n  return (\n    <div id=\"component-example-svg\" className=\"container\">\n      <section className=\"hero\">\n        <div className=\"hero-body\">\n          <p className=\"title\">SVG Rendering</p>\n          <p className=\"subtitle\">\n            You can render molecules using svg and specify height and width.\n          </p>\n        </div>\n      </section>\n      <div className=\"columns is-desktop\">\n        <div className=\"column\">\n          <MoleculeStructure\n            width={350}\n            height={300}\n            svgMode\n            structure={caffeine}\n            id=\"structure-example-svg-caffeine\"\n          />\n        </div>\n        <div className=\"column\">\n          <MoleculeStructure\n            width={350}\n            height={300}\n            svgMode\n            structure={aspirin}\n            id=\"structure-example-svg-aspirin\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ExampleSVG;\n","import MoleculeStructure from \"../components/MoleculeStructure/MoleculeStructure\";\n\nfunction ExampleCanvas() {\n  const caffeine = \"CN1C=NC2=C1C(=O)N(C(=O)N2C)\";\n  const aspirin = \"CC(=O)Oc1ccccc1C(=O)O\";\n\n  return (\n    <div id=\"component-example-canvas\" className=\"container\">\n      <section className=\"hero\">\n        <div className=\"hero-body\">\n          <p className=\"title\">Canvas rendering</p>\n          <p className=\"subtitle\">\n            You can also render molecules using the HTML Canvas API and specify\n            height and width.\n          </p>\n        </div>\n      </section>\n      <div className=\"columns is-desktop\">\n        <div className=\"column\">\n          <MoleculeStructure\n            width={350}\n            height={300}\n            structure={caffeine}\n            id=\"structure-example-canvas-caffeine\"\n          />\n        </div>\n        <div className=\"column\">\n          <MoleculeStructure\n            width={350}\n            height={300}\n            structure={aspirin}\n            id=\"structure-example-canvas-aspirin\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ExampleCanvas;\n","import MoleculeStructure from \"../components/MoleculeStructure/MoleculeStructure\";\n\nfunction ExampleDrawingOptions() {\n  const caffeine = \"CN1C=NC2=C1C(=O)N(C(=O)N2C)\";\n  const caffeineSubStruct = \"[N,n,O;!H0]\";\n\n  const aspirin = \"CC(=O)Oc1ccccc1C(=O)O\";\n  const aspirinSubStruct = \"CC(=O)Oc1ccccc1C\";\n\n  return (\n    <div id=\"component-example-drawing-options\" className=\"container\">\n      <section className=\"hero\">\n        <div className=\"hero-body\">\n          <p className=\"title\">Additional Drawing Options</p>\n          <p className=\"subtitle\">\n            RDKit.js provides you with all these additional options.\n          </p>\n        </div>\n      </section>\n      <div className=\"columns is-desktop\">\n        <div className=\"column\">\n          <MoleculeStructure\n            width={350}\n            height={300}\n            svgMode\n            structure={caffeine}\n            subStructure={caffeineSubStruct}\n            extraDetails={{\n              addAtomIndices: true,\n              highlightColor: [1, 0, 1],\n              legend: \"caffeine\",\n            }}\n            id=\"structure-example-drawing-options-caffeine\"\n          />\n        </div>\n        <div className=\"column\">\n          <MoleculeStructure\n            width={350}\n            height={300}\n            structure={aspirin}\n            subStructure={aspirinSubStruct}\n            extraDetails={{\n              addAtomIndices: true,\n              highlightColor: [0, 1, 1],\n              legend: \"aspirin\",\n            }}\n            id=\"structure-example-drawing-options-aspirin\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ExampleDrawingOptions;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CodeExample from \"./components/CodeExample/CodeExample\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport ExampleMoleculeStructure from \"./examples/ExampleMoleculeStructure\";\nimport ExampleSubstructure from \"./examples/ExampleSubstructure\";\nimport ExampleSVG from \"./examples/ExampleSvg\";\nimport ExampleCanvas from \"./examples/ExampleCanvas\";\nimport ExampleDrawingOptions from \"./examples/ExampleDrawingOptions\";\n/* eslint import/no-webpack-loader-syntax: off */\nimport MoleculeStructureCode from \"!!raw-loader!./components/MoleculeStructure/MoleculeStructure\";\nimport ExampleSVGCode from \"!!raw-loader!./examples/ExampleSvg.js\";\nimport ExampleCanvasCode from \"!!raw-loader!./examples/ExampleCanvas.js\";\nimport ExampleSubstructureCode from \"!!raw-loader!./examples/ExampleSubstructure.js\";\nimport ExampleDrawingOptionsCode from \"!!raw-loader!./examples/ExampleDrawingOptions.js\";\nimport \"./index.css\";\n\nReactDOM.render(<NavBar />, document.getElementById(\"navbar\"));\nReactDOM.render(\n  <CodeExample code={MoleculeStructureCode}>\n    <ExampleMoleculeStructure />\n  </CodeExample>,\n  document.getElementById(\"example-mol-structure\")\n);\n\nReactDOM.render(\n  <CodeExample code={ExampleSVGCode}>\n    <ExampleSVG />\n  </CodeExample>,\n  document.getElementById(\"example-svg\")\n);\n\nReactDOM.render(\n  <CodeExample code={ExampleCanvasCode}>\n    <ExampleCanvas />\n  </CodeExample>,\n  document.getElementById(\"example-canvas\")\n);\n\nReactDOM.render(\n  <CodeExample code={ExampleSubstructureCode}>\n    <ExampleSubstructure />\n  </CodeExample>,\n  document.getElementById(\"example-substructures\")\n);\n\nReactDOM.render(\n  <CodeExample code={ExampleDrawingOptionsCode}>\n    <ExampleDrawingOptions />\n  </CodeExample>,\n  document.getElementById(\"example-all-options\")\n);\n","export default \"import React, { Component } from \\\"react\\\";\\nimport \\\"./MoleculeStructure.css\\\";\\nimport PropTypes from \\\"prop-types\\\";\\n\\nclass MoleculeStructure extends Component {\\n  static propTypes = {\\n    /**\\n     * Generic properties\\n     */\\n    id: PropTypes.string.isRequired,\\n    className: PropTypes.string,\\n    svgMode: PropTypes.bool,\\n    width: PropTypes.number,\\n    height: PropTypes.number,\\n    /**\\n     * RDKit-specific properties\\n     */\\n    structure: PropTypes.string.isRequired,\\n    subStructure: PropTypes.string,\\n    extraDetails: PropTypes.object,\\n  };\\n\\n  static defaultProps = {\\n    subStructure: \\\"\\\",\\n    className: \\\"\\\",\\n    width: 250,\\n    height: 200,\\n    svgMode: false,\\n    extraDetails: {},\\n  };\\n\\n  constructor(props) {\\n    super(props);\\n\\n    this.RDKit = window.RDKit;\\n\\n    this.MOL_DETAILS = {\\n      width: this.props.width,\\n      height: this.props.height,\\n      bondLineWidth: 1,\\n      addStereoAnnotation: true,\\n      ...this.props.extraDetails,\\n    };\\n\\n    const structure =\\n      typeof this.props.structure === \\\"string\\\" ? this.props.structure : \\\"\\\";\\n    const subStructure =\\n      typeof this.props.subStructure === \\\"string\\\"\\n        ? this.props.subStructure\\n        : \\\"\\\";\\n    this.state = {\\n      svg: undefined,\\n      mol: !!this.RDKit ? this.RDKit.get_mol(structure) : \\\"\\\",\\n      qmol: this.RDKit ? this.RDKit.get_qmol(subStructure) : \\\"\\\",\\n      rdKitLoaded: !!this.RDKit,\\n      rdKitError: false,\\n    };\\n  }\\n\\n  draw() {\\n    const isValidMol = this.isValidMol();\\n    if (isValidMol && this.props.svgMode) {\\n      const svg = this.state.mol.get_svg_with_highlights(this.getMolDetails());\\n      this.setState({ svg });\\n    } else if (isValidMol) {\\n      const canvas = document.getElementById(this.props.id);\\n      this.state.mol.draw_to_canvas_with_highlights(\\n        canvas,\\n        this.getMolDetails()\\n      );\\n    }\\n  }\\n\\n  isValidMol() {\\n    return !!this.state.mol && this.state.mol.is_valid();\\n  }\\n\\n  isValidQMol() {\\n    return !!this.state.qmol && this.state.qmol.is_valid();\\n  }\\n\\n  getMolDetails() {\\n    if (this.isValidMol() && this.isValidQMol()) {\\n      const extraMolDetails = JSON.parse(\\n        this.state.mol.get_substruct_match(this.state.qmol)\\n      );\\n      return JSON.stringify({\\n        ...this.MOL_DETAILS,\\n        ...extraMolDetails,\\n      });\\n    } else {\\n      return JSON.stringify(this.MOL_DETAILS);\\n    }\\n  }\\n\\n  componentDidMount() {\\n    this.draw();\\n\\n    if (!this.state.rdKitLoaded) {\\n      window\\n        .initRDKitModule()\\n        .then((RDKit) => {\\n          window.RDKit = RDKit;\\n          this.RDKit = window.RDKit;\\n          this.setState({ rdKitLoaded: true, rdKitError: false });\\n        })\\n        .catch(() => {\\n          this.setState({ rdKitLoaded: false, rdKitError: true });\\n        });\\n    }\\n  }\\n\\n  componentDidUpdate(prevProps, prevState) {\\n    const rdkitStateChanged = prevState.rdKitLoaded !== this.state.rdKitLoaded;\\n\\n    if (rdkitStateChanged && this.state.rdKitLoaded) {\\n      let oldMol, oldQMol;\\n      const updateObject = {};\\n\\n      oldMol = this.state.mol || undefined;\\n      updateObject.mol = this.RDKit.get_mol(this.props.structure);\\n\\n      oldQMol = this.state.qmol || undefined;\\n      updateObject.qmol = this.RDKit.get_qmol(this.props.subStructure);\\n\\n      this.setState({ ...updateObject }, () => this.draw());\\n\\n      /**\\n       * Delete C++ mol objects manually\\n       * https://emscripten.org/docs/porting/connecting_cpp_and_javascript/embind.html#memory-management\\n       */\\n      if (oldMol) {\\n        oldMol.delete();\\n      }\\n\\n      if (oldQMol) {\\n        oldQMol.delete();\\n      }\\n    }\\n  }\\n\\n  componentWillUnmount() {\\n    /**\\n     * Delete C++ mol objects manually\\n     * https://emscripten.org/docs/porting/connecting_cpp_and_javascript/embind.html#memory-management\\n     */\\n\\n    if (this.state.mol) {\\n      this.state.mol.delete();\\n    }\\n\\n    if (this.state.qmol) {\\n      this.state.qmol.delete();\\n    }\\n  }\\n\\n  render() {\\n    if (this.state.rdKitError) {\\n      return \\\"Error loading renderer.\\\";\\n    }\\n    if (!this.state.rdKitLoaded) {\\n      return \\\"Loading renderer...\\\";\\n    }\\n\\n    if (!this.isValidMol()) {\\n      return (\\n        <span title={`Cannot render structure: ${this.props.structure}`}>\\n          Render Error.\\n        </span>\\n      );\\n    } else if (this.props.svgMode) {\\n      return (\\n        <div\\n          title={this.props.structure}\\n          className={\\\"molecule-structure-svg \\\" + (this.props.className || \\\"\\\")}\\n          style={{ width: this.props.width, height: this.props.height }}\\n          dangerouslySetInnerHTML={{ __html: this.state.svg }}\\n        ></div>\\n      );\\n    } else {\\n      return (\\n        <div\\n          className={\\n            \\\"molecule-canvas-container \\\" + (this.props.className || \\\"\\\")\\n          }\\n        >\\n          <canvas\\n            title={this.props.structure}\\n            id={this.props.id}\\n            width={this.props.width}\\n            height={this.props.height}\\n          ></canvas>\\n        </div>\\n      );\\n    }\\n  }\\n}\\n\\nexport default MoleculeStructure;\\n\";","export default \"import MoleculeStructure from \\\"../components/MoleculeStructure/MoleculeStructure\\\";\\n\\nfunction ExampleSVG() {\\n  const caffeine = \\\"CN1C=NC2=C1C(=O)N(C(=O)N2C)\\\";\\n  const aspirin = \\\"CC(=O)Oc1ccccc1C(=O)O\\\";\\n\\n  return (\\n    <div id=\\\"component-example-svg\\\" className=\\\"container\\\">\\n      <section className=\\\"hero\\\">\\n        <div className=\\\"hero-body\\\">\\n          <p className=\\\"title\\\">SVG Rendering</p>\\n          <p className=\\\"subtitle\\\">\\n            You can render molecules using svg and specify height and width.\\n          </p>\\n        </div>\\n      </section>\\n      <div className=\\\"columns is-desktop\\\">\\n        <div className=\\\"column\\\">\\n          <MoleculeStructure\\n            width={350}\\n            height={300}\\n            svgMode\\n            structure={caffeine}\\n            id=\\\"structure-example-svg-caffeine\\\"\\n          />\\n        </div>\\n        <div className=\\\"column\\\">\\n          <MoleculeStructure\\n            width={350}\\n            height={300}\\n            svgMode\\n            structure={aspirin}\\n            id=\\\"structure-example-svg-aspirin\\\"\\n          />\\n        </div>\\n      </div>\\n    </div>\\n  );\\n}\\n\\nexport default ExampleSVG;\\n\";","export default \"import MoleculeStructure from \\\"../components/MoleculeStructure/MoleculeStructure\\\";\\n\\nfunction ExampleCanvas() {\\n  const caffeine = \\\"CN1C=NC2=C1C(=O)N(C(=O)N2C)\\\";\\n  const aspirin = \\\"CC(=O)Oc1ccccc1C(=O)O\\\";\\n\\n  return (\\n    <div id=\\\"component-example-canvas\\\" className=\\\"container\\\">\\n      <section className=\\\"hero\\\">\\n        <div className=\\\"hero-body\\\">\\n          <p className=\\\"title\\\">Canvas rendering</p>\\n          <p className=\\\"subtitle\\\">\\n            You can also render molecules using the HTML Canvas API and specify\\n            height and width.\\n          </p>\\n        </div>\\n      </section>\\n      <div className=\\\"columns is-desktop\\\">\\n        <div className=\\\"column\\\">\\n          <MoleculeStructure\\n            width={350}\\n            height={300}\\n            structure={caffeine}\\n            id=\\\"structure-example-canvas-caffeine\\\"\\n          />\\n        </div>\\n        <div className=\\\"column\\\">\\n          <MoleculeStructure\\n            width={350}\\n            height={300}\\n            structure={aspirin}\\n            id=\\\"structure-example-canvas-aspirin\\\"\\n          />\\n        </div>\\n      </div>\\n    </div>\\n  );\\n}\\n\\nexport default ExampleCanvas;\\n\";","export default \"import MoleculeStructure from \\\"../components/MoleculeStructure/MoleculeStructure\\\";\\n\\nfunction ExampleSubstructure() {\\n  const caffeine = \\\"CN1C=NC2=C1C(=O)N(C(=O)N2C)\\\";\\n  const caffeineSubStruct = \\\"[N,n,O;!H0]\\\";\\n\\n  const aspirin = \\\"CC(=O)Oc1ccccc1C(=O)O\\\";\\n  const aspirinSubStruct = \\\"CC(=O)Oc1ccccc1C\\\";\\n\\n  return (\\n    <div id=\\\"component-example-substruct\\\" className=\\\"container\\\">\\n      <section className=\\\"hero\\\">\\n        <div className=\\\"hero-body\\\">\\n          <p className=\\\"title\\\">Substructure Highlight</p>\\n          <p className=\\\"subtitle\\\">\\n            You can also highlight substructure of molecules with both the SVG\\n            and Canvas APIs.\\n          </p>\\n        </div>\\n      </section>\\n      <div className=\\\"columns is-desktop\\\">\\n        <div className=\\\"column\\\">\\n          <MoleculeStructure\\n            width={350}\\n            height={300}\\n            svgMode\\n            structure={caffeine}\\n            subStructure={caffeineSubStruct}\\n            id=\\\"structure-example-substruct-svg-caffeine\\\"\\n          />\\n        </div>\\n        <div className=\\\"column\\\">\\n          <MoleculeStructure\\n            width={350}\\n            height={300}\\n            structure={aspirin}\\n            subStructure={aspirinSubStruct}\\n            id=\\\"structure-example-subsctruct-canvas-aspirin\\\"\\n          />\\n        </div>\\n      </div>\\n    </div>\\n  );\\n}\\n\\nexport default ExampleSubstructure;\\n\";","export default \"import MoleculeStructure from \\\"../components/MoleculeStructure/MoleculeStructure\\\";\\n\\nfunction ExampleDrawingOptions() {\\n  const caffeine = \\\"CN1C=NC2=C1C(=O)N(C(=O)N2C)\\\";\\n  const caffeineSubStruct = \\\"[N,n,O;!H0]\\\";\\n\\n  const aspirin = \\\"CC(=O)Oc1ccccc1C(=O)O\\\";\\n  const aspirinSubStruct = \\\"CC(=O)Oc1ccccc1C\\\";\\n\\n  return (\\n    <div id=\\\"component-example-drawing-options\\\" className=\\\"container\\\">\\n      <section className=\\\"hero\\\">\\n        <div className=\\\"hero-body\\\">\\n          <p className=\\\"title\\\">Additional Drawing Options</p>\\n          <p className=\\\"subtitle\\\">\\n            RDKit.js provides you with all these additional options.\\n          </p>\\n        </div>\\n      </section>\\n      <div className=\\\"columns is-desktop\\\">\\n        <div className=\\\"column\\\">\\n          <MoleculeStructure\\n            width={350}\\n            height={300}\\n            svgMode\\n            structure={caffeine}\\n            subStructure={caffeineSubStruct}\\n            extraDetails={{\\n              addAtomIndices: true,\\n              highlightColor: [1, 0, 1],\\n              legend: \\\"caffeine\\\",\\n            }}\\n            id=\\\"structure-example-drawing-options-caffeine\\\"\\n          />\\n        </div>\\n        <div className=\\\"column\\\">\\n          <MoleculeStructure\\n            width={350}\\n            height={300}\\n            structure={aspirin}\\n            subStructure={aspirinSubStruct}\\n            extraDetails={{\\n              addAtomIndices: true,\\n              highlightColor: [0, 1, 1],\\n              legend: \\\"aspirin\\\",\\n            }}\\n            id=\\\"structure-example-drawing-options-aspirin\\\"\\n          />\\n        </div>\\n      </div>\\n    </div>\\n  );\\n}\\n\\nexport default ExampleDrawingOptions;\\n\";"],"sourceRoot":""}